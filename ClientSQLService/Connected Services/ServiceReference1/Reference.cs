//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientSQLService.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Libro", Namespace="http://schemas.datacontract.org/2004/07/LibrarySQL")]
    [System.SerializableAttribute()]
    public partial class Libro : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AutorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AñoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeneroField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TituloField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Autor {
            get {
                return this.AutorField;
            }
            set {
                if ((object.ReferenceEquals(this.AutorField, value) != true)) {
                    this.AutorField = value;
                    this.RaisePropertyChanged("Autor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Año {
            get {
                return this.AñoField;
            }
            set {
                if ((this.AñoField.Equals(value) != true)) {
                    this.AñoField = value;
                    this.RaisePropertyChanged("Año");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Genero {
            get {
                return this.GeneroField;
            }
            set {
                if ((object.ReferenceEquals(this.GeneroField, value) != true)) {
                    this.GeneroField = value;
                    this.RaisePropertyChanged("Genero");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Titulo {
            get {
                return this.TituloField;
            }
            set {
                if ((object.ReferenceEquals(this.TituloField, value) != true)) {
                    this.TituloField = value;
                    this.RaisePropertyChanged("Titulo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ObtenerLibros", ReplyAction="http://tempuri.org/IService1/ObtenerLibrosResponse")]
        ClientSQLService.ServiceReference1.Libro[] ObtenerLibros();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ObtenerLibros", ReplyAction="http://tempuri.org/IService1/ObtenerLibrosResponse")]
        System.Threading.Tasks.Task<ClientSQLService.ServiceReference1.Libro[]> ObtenerLibrosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ObtenerLibroPorId", ReplyAction="http://tempuri.org/IService1/ObtenerLibroPorIdResponse")]
        ClientSQLService.ServiceReference1.Libro ObtenerLibroPorId(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ObtenerLibroPorId", ReplyAction="http://tempuri.org/IService1/ObtenerLibroPorIdResponse")]
        System.Threading.Tasks.Task<ClientSQLService.ServiceReference1.Libro> ObtenerLibroPorIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CrearLibro", ReplyAction="http://tempuri.org/IService1/CrearLibroResponse")]
        void CrearLibro(ClientSQLService.ServiceReference1.Libro libro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CrearLibro", ReplyAction="http://tempuri.org/IService1/CrearLibroResponse")]
        System.Threading.Tasks.Task CrearLibroAsync(ClientSQLService.ServiceReference1.Libro libro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ActualizarLibro", ReplyAction="http://tempuri.org/IService1/ActualizarLibroResponse")]
        void ActualizarLibro(ClientSQLService.ServiceReference1.Libro libro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ActualizarLibro", ReplyAction="http://tempuri.org/IService1/ActualizarLibroResponse")]
        System.Threading.Tasks.Task ActualizarLibroAsync(ClientSQLService.ServiceReference1.Libro libro);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EliminarLibro", ReplyAction="http://tempuri.org/IService1/EliminarLibroResponse")]
        void EliminarLibro(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EliminarLibro", ReplyAction="http://tempuri.org/IService1/EliminarLibroResponse")]
        System.Threading.Tasks.Task EliminarLibroAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : ClientSQLService.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<ClientSQLService.ServiceReference1.IService1>, ClientSQLService.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClientSQLService.ServiceReference1.Libro[] ObtenerLibros() {
            return base.Channel.ObtenerLibros();
        }
        
        public System.Threading.Tasks.Task<ClientSQLService.ServiceReference1.Libro[]> ObtenerLibrosAsync() {
            return base.Channel.ObtenerLibrosAsync();
        }
        
        public ClientSQLService.ServiceReference1.Libro ObtenerLibroPorId(int id) {
            return base.Channel.ObtenerLibroPorId(id);
        }
        
        public System.Threading.Tasks.Task<ClientSQLService.ServiceReference1.Libro> ObtenerLibroPorIdAsync(int id) {
            return base.Channel.ObtenerLibroPorIdAsync(id);
        }
        
        public void CrearLibro(ClientSQLService.ServiceReference1.Libro libro) {
            base.Channel.CrearLibro(libro);
        }
        
        public System.Threading.Tasks.Task CrearLibroAsync(ClientSQLService.ServiceReference1.Libro libro) {
            return base.Channel.CrearLibroAsync(libro);
        }
        
        public void ActualizarLibro(ClientSQLService.ServiceReference1.Libro libro) {
            base.Channel.ActualizarLibro(libro);
        }
        
        public System.Threading.Tasks.Task ActualizarLibroAsync(ClientSQLService.ServiceReference1.Libro libro) {
            return base.Channel.ActualizarLibroAsync(libro);
        }
        
        public void EliminarLibro(int id) {
            base.Channel.EliminarLibro(id);
        }
        
        public System.Threading.Tasks.Task EliminarLibroAsync(int id) {
            return base.Channel.EliminarLibroAsync(id);
        }
    }
}
